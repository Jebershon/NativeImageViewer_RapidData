// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testnativefiledocuments.proxies;

public class TestCropImage extends system.proxies.Image
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestNativeFileDocuments.TestCropImage";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ImageWidth("ImageWidth"),
		ImageHeight("ImageHeight"),
		CropWidth("CropWidth"),
		CropHeight("CropHeight"),
		CropperCircleOverlay("CropperCircleOverlay"),
		PublicThumbnailPath("PublicThumbnailPath"),
		EnableCaching("EnableCaching"),
		FileID("FileID"),
		Name("Name"),
		DeleteAfterDownload("DeleteAfterDownload"),
		Contents("Contents"),
		HasContents("HasContents"),
		Size("Size");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TestCropImage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected TestCropImage(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject testCropImageMendixObject)
	{
		super(context, testCropImageMendixObject);
		if (!com.mendix.core.Core.isSubClassOf(entityName, testCropImageMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static testnativefiledocuments.proxies.TestCropImage initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testnativefiledocuments.proxies.TestCropImage(context, mendixObject);
	}

	public static testnativefiledocuments.proxies.TestCropImage load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testnativefiledocuments.proxies.TestCropImage.initialize(context, mendixObject);
	}

	public static java.util.List<testnativefiledocuments.proxies.TestCropImage> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> testnativefiledocuments.proxies.TestCropImage.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of ImageWidth
	 */
	public final java.lang.Integer getImageWidth()
	{
		return getImageWidth(getContext());
	}

	/**
	 * @param context
	 * @return value of ImageWidth
	 */
	public final java.lang.Integer getImageWidth(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.ImageWidth.toString());
	}

	/**
	 * Set value of ImageWidth
	 * @param imagewidth
	 */
	public final void setImageWidth(java.lang.Integer imagewidth)
	{
		setImageWidth(getContext(), imagewidth);
	}

	/**
	 * Set value of ImageWidth
	 * @param context
	 * @param imagewidth
	 */
	public final void setImageWidth(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer imagewidth)
	{
		getMendixObject().setValue(context, MemberNames.ImageWidth.toString(), imagewidth);
	}

	/**
	 * @return value of ImageHeight
	 */
	public final java.lang.Integer getImageHeight()
	{
		return getImageHeight(getContext());
	}

	/**
	 * @param context
	 * @return value of ImageHeight
	 */
	public final java.lang.Integer getImageHeight(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.ImageHeight.toString());
	}

	/**
	 * Set value of ImageHeight
	 * @param imageheight
	 */
	public final void setImageHeight(java.lang.Integer imageheight)
	{
		setImageHeight(getContext(), imageheight);
	}

	/**
	 * Set value of ImageHeight
	 * @param context
	 * @param imageheight
	 */
	public final void setImageHeight(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer imageheight)
	{
		getMendixObject().setValue(context, MemberNames.ImageHeight.toString(), imageheight);
	}

	/**
	 * @return value of CropWidth
	 */
	public final java.lang.Integer getCropWidth()
	{
		return getCropWidth(getContext());
	}

	/**
	 * @param context
	 * @return value of CropWidth
	 */
	public final java.lang.Integer getCropWidth(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.CropWidth.toString());
	}

	/**
	 * Set value of CropWidth
	 * @param cropwidth
	 */
	public final void setCropWidth(java.lang.Integer cropwidth)
	{
		setCropWidth(getContext(), cropwidth);
	}

	/**
	 * Set value of CropWidth
	 * @param context
	 * @param cropwidth
	 */
	public final void setCropWidth(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer cropwidth)
	{
		getMendixObject().setValue(context, MemberNames.CropWidth.toString(), cropwidth);
	}

	/**
	 * @return value of CropHeight
	 */
	public final java.lang.Integer getCropHeight()
	{
		return getCropHeight(getContext());
	}

	/**
	 * @param context
	 * @return value of CropHeight
	 */
	public final java.lang.Integer getCropHeight(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.CropHeight.toString());
	}

	/**
	 * Set value of CropHeight
	 * @param cropheight
	 */
	public final void setCropHeight(java.lang.Integer cropheight)
	{
		setCropHeight(getContext(), cropheight);
	}

	/**
	 * Set value of CropHeight
	 * @param context
	 * @param cropheight
	 */
	public final void setCropHeight(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer cropheight)
	{
		getMendixObject().setValue(context, MemberNames.CropHeight.toString(), cropheight);
	}

	/**
	 * @return value of CropperCircleOverlay
	 */
	public final java.lang.Boolean getCropperCircleOverlay()
	{
		return getCropperCircleOverlay(getContext());
	}

	/**
	 * @param context
	 * @return value of CropperCircleOverlay
	 */
	public final java.lang.Boolean getCropperCircleOverlay(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.CropperCircleOverlay.toString());
	}

	/**
	 * Set value of CropperCircleOverlay
	 * @param croppercircleoverlay
	 */
	public final void setCropperCircleOverlay(java.lang.Boolean croppercircleoverlay)
	{
		setCropperCircleOverlay(getContext(), croppercircleoverlay);
	}

	/**
	 * Set value of CropperCircleOverlay
	 * @param context
	 * @param croppercircleoverlay
	 */
	public final void setCropperCircleOverlay(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean croppercircleoverlay)
	{
		getMendixObject().setValue(context, MemberNames.CropperCircleOverlay.toString(), croppercircleoverlay);
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testnativefiledocuments.proxies.TestCropImage that = (testnativefiledocuments.proxies.TestCropImage) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
